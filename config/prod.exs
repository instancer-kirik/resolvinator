import Config

# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix assets.deploy` task,
# which you should run after static files are built and
# before starting your production server.
config :resolvinator, ResolvinatorWeb.Endpoint,
  cache_static_manifest: "priv/static/cache_manifest.json",
  # Force SSL for all connections
  force_ssl: [
    host: nil,
    rewrite_on: [:x_forwarded_proto],
    hsts: true,
    preload: true
  ],
  check_origin: true  # Prevent WebSocket connection from unauthorized origins

# Configures Swoosh API Client
config :swoosh, api_client: Swoosh.ApiClient.Finch, finch_name: Resolvinator.Finch

# Disable Swoosh Local Memory Storage
config :swoosh, local: false

# Do not print debug messages in production
config :logger, level: :info

# Runtime production configuration, including reading
# of environment variables, is done on config/runtime.exs.

config :resolvinator,
  fabric_endpoint: System.get_env("FABRIC_API_ENDPOINT"),
  fabric_key: System.get_env("FABRIC_API_KEY")

# Crypto reward mainnet configuration
config :resolvinator, Resolvinator.Rewards.CryptoReward,
  use_testnet: false,
  mainnet_fallback_nodes: [
    ethereum: [
      System.get_env("ETHEREUM_MAINNET_RPC_1", "https://eth-mainnet.g.alchemy.com/v2/#{System.get_env("ALCHEMY_API_KEY")}"),
      System.get_env("ETHEREUM_MAINNET_RPC_2", "https://mainnet.infura.io/v3/#{System.get_env("INFURA_PROJECT_ID")}")
    ],
    polygon: [
      System.get_env("POLYGON_MAINNET_RPC_1", "https://polygon-rpc.com"),
      System.get_env("POLYGON_MAINNET_RPC_2", "https://rpc-mainnet.matic.network")
    ]
  ]

# config/prod.exs
